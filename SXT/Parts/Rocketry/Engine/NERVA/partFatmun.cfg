PART
{
	// Kerbal Space Program - Part Config
	// 
	
	// --- general parameters ---
	name = SXTNERVAB
	module = Part
	author = Lack
	
	// --- asset parameters ---
	
	MODEL
	{
		model = SXT/Parts/Rocketry/Engine/NERVA/portlyman
		texture = model000 , Squad/Parts/Engine/liquidEngineLV-N/model000
		texture = model001_NRM , Squad/Parts/Engine/liquidEngineLV-N/model001	
		texture = model002 , Squad/Parts/Engine/liquidEngineLV-N/model002
		texture = fairing , Squad/Parts/Engine/liquidEngineLV-N/model003
		scale = .66 , .66 , .66
	}
	scale = 1
	rescaleFactor = 1
	
	// --- node definitions ---
	node_stack_top = 0.0, 0, 0.0, 0.0, 1.0, 0.0 , 2
	node_stack_bottom = 0.0, -3.774, 0.0, 0, -1, 0 , 2
	
	fx_exhaustFlame_blue = 0.0, 0, 0.0, 0.0, 1.0, 0.0, running
	fx_exhaustLight_blue = 0.0, 0, 0.0, 0.0, 0.0, 1.0, running
	fx_smokeTrail_light = 0.0, 0, 0.0, 0.0, 1.0, 0.0, running
	
	
	sound_vent_medium = engage
	sound_rocket_hard = running
	sound_vent_soft = disengage
	sound_explosion_low = flameout
	
	// --- editor parameters ---
		TechRequired = nuclearPropulsion
		entryCost = 12000 // 60000
		cost = 40000
	category = Engine
	subcategory = 0
	title = LV-NX4 "Fat Mun" Atomic Rocket Motor
	manufacturer = Jebediah Kerman's Junkyard and Spacecraft Parts Co
	description = The "Fat Mun" series is based off the dozens of spare nuclear reactors the KSC has recently acquired. This not related to a report stating that nuclear reactors are 'Not a suitable alternative central heating'.
	
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,0,0 // 1,1,1,0,0
	
	mass = 9
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 12
	breakingForce = 250 // 200
	breakingTorque = 250 // 200
	maxTemp = 2500 // = 4000
	
	bulkheadProfiles = size2
	
	radiatorMax = 0.35 //Default = 0.25 but nuke engines are meant to run hot
	heatConductivity = 0.06 // half default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.85 // engine nozzles are good at radiating, NTRs even better

	tags = active atom efficient engine inter liquid fat mun nuclear nuke orbit propuls radio reactor vacuum
	
	MODULE
	{
		name = ModuleEngines
		thrustVectorTransformName = thrustTransform
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 250
		heatProduction = 500 // 750
		fxOffset = 0, 0, 1.6
		EngineType = Nuclear
		exhaustDamageDistanceOffset = 1.86
		PROPELLANT
		{
			name = LiquidFuel
	        	ratio = 0.9
			DrawGauge = True
		}
		atmosphereCurve
		{
			key = 0 800
			key = 1 200
			key = 2 0.001
		}
	}
	
	MODULE
	{
	       name = ModuleJettison
	       jettisonName = fairing
	       bottomNodeName = bottom
	       isFairing = True
	       jettisonedObjectMass = 0.1
	       jettisonForce = 5
	       jettisonDirection = 0 0 1
	}
	
	MODULE
	{
	      name = ModuleAnimateHeat
	      ThermalAnim = nerva
	}
	
	MODULE
	{
		name = ModuleAlternator	
		RESOURCE
		{
			name = ElectricCharge
			rate = 20.0 // 10.0
		}
	}
	RESOURCE
	{
		name = ElectricCharge
		amount = 0
		maxAmount = 0
		isTweakable = false
		hideFlow = true
	}
	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.8
		maxDistance = 50
		falloff = 2.0
		thrustTransformName = thrustTransform
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = False
		useEvent = True
		situationMask = 121
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 600
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
}
